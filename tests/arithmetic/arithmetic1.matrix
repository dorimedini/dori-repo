{
	matrix m_square(3,3) = [1, 2, 3; 4, 5, 6; 7, 8, 9];
	matrix m(2,3) = [1, 2, 3; 4, 5, 6];
	print m_square;
	print m;

	foreach (i in m_square)
		print i;

	matrix trans(3,2)=transpose(m), trans_sq=transpose(m_square);
	matrix I(3,3) = [1, 0, 0; 0, 1, 0; 0, 0, 1];

	matrix add(3,3)=m_square + I;
	print add;
	m_square=m_square+I;
	print m_square;
	m_square=m_square-I;
	print m_square;

	matrix subtract(3,3)=m_square - I;
	print subtract;
	m_square=m_square-I;
	print m_square;
	m_square=m_square+I;
	print m_square;

	matrix mul_id(3,3)=m_square * I;
	print mul;
	
	m_square=m_square * m_square;
	print m_square;
	
	matrix mul_trans(2,2)=m * transpose(m);
	print mul_trans;

	matrix neg(2,3)=-m;
	print neg;

	int a = 3;

	m=m * a;
	print m;
	int x=0,y=0;
	foreach(i in m) {
		m[x,y]=m[x,y]/3;
		x=x+1;
		y=y+1;
	}
	print m;
	
	m=a*m;
	print m;
	int x=0,y=0;
	foreach(i in m) {
		m[x,y]=m[x,y]/3;
		x=x+1;
		y=y+1;
	}
	print m;
	
	m=m*-1;
	print m;
	int x=0,y=0;
	foreach(i in m) {
		m[x,y]=m[x,y]/3;
		x=x+1;
		y=y+1;
	}
	print m;
	
	m=m*(-1);
	print m;
	int x=0,y=0;
	foreach(i in m) {
		m[x,y]=m[x,y]/3;
		x=x+1;
		y=y+1;
	}
	print m;
	
	m=m*0;
	print m;
	int x=0,y=0;
	foreach(i in m) {
		m[x,y]=m[x,y]/3;
		x=x+1;
		y=y+1;
	}
	print m;
	
}