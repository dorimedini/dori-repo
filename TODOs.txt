V	1. ELSE needs to have higher priority than the IF rule, to solve ambiguity?
    2. For scoping, do:
	   Stmt : LC M Stmt RC
       Where M adds a symbol table to the stack, and when reducing Stmt pop the symbol table
	   from the stack.
V	3. Associativity for boolean operators?
	4. When assigning to an Lvalue, careful not to make any mistakes while creating the IR code...
	5. REMEMBER: We ALWAYS assume every Exp contains a valid Exp.stack_offset, where
	   Exp.stack_offset is the location of the temporary variable Exp represents.
	6. Eliminate stype.matrix
	7. Make sure there are no conflicts in bison, not even implicit ones.
	8. Go over all Exp rules again, make sure we can handle both cases correctly:
	   if an input Exp is a constant, we need to output code with the actual number.
	   If an Exp isn't constant, then we need to use it's stack_offset field.
	   Look at functions like mul(), add(), negate() etc, and all Exp reducing rules.
	9. Test #19, #20 in the test_ directory. Why semantic error and not syntactic error?